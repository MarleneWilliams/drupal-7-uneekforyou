<?php

function commerce_backoffice_install() {
  // Create the message text field for our message type category.
  $instance = array(
    'field_name' => MESSAGE_FIELD_MESSAGE_TEXT,
    'bundle' => 'commerce_order_message',
    'entity_type' => 'message_type',
    'label' => t('Message text'),
    'description' => t('This is the text of all messages of this type.'),
    'required' => TRUE,
    'settings' => array(
      'text_processing' => 1,
    ),
  );
  if ($existing_instance = field_info_instance($instance['entity_type'], $instance['field_name'], $instance['bundle'])) {
    field_update_instance($instance);
  }
  else {
    field_create_instance($instance);
  }

  // Add a display name field.
  $field = array(
    'field_name' => 'message_order_display_name',
    'type' => 'text',
    'module' => 'text',
    'cardinality' => '1',
    'translatable' => TRUE,
    'settings' => array(
      'max_length' => '255',
    ),
  );
  if (field_info_field($field['field_name'])) {
    field_update_field($field);
  }
  else {
    field_create_field($field);
  }
  $instance = array(
    'field_name' => $field['field_name'],
    'bundle' => 'commerce_order_message',
    'entity_type' => 'message_type',
    'label' => t('Display name'),
    'description' => t('The name of this message type as displayed in logs.'),
    'required' => TRUE,
    'settings' => array(
      'text_processing' => 0,
    ),
  );
  if ($existing_instance = field_info_instance($instance['entity_type'], $instance['field_name'], $instance['bundle'])) {
    field_update_instance($instance);
  }
  else {
    field_create_instance($instance);
  }

  // Add text format if it doesn't exist.
  if (!filter_format_load('commerce_order_message')) {
    $format = (object) array(
      'format' => 'commerce_order_message',
      'name' => 'Commerce Order Message',
      'weight' => 0,
      'filters' => array(
        // HTML filter.
        'filter_html' => array(
          'weight' => 1,
          'status' => 1,
        ),
      ),
    );
    filter_format_save($format);
  }

  // Update order field instances to show up in the "Backoffice" view mode.
  $line_items = field_info_instance('commerce_order', 'commerce_line_items', 'commerce_order');
  $line_items['display']['backoffice'] = array(
    'label' => 'hidden',
    'type' => 'commerce_line_item_reference_view',
    'weight' => 0,
    'settings' => array(
      'view' => 'commerce_line_item_table|default',
    ),
  );
  field_update_instance($line_items);

  $order_total = field_info_instance('commerce_order', 'commerce_order_total', 'commerce_order');
  $order_total['display']['backoffice'] = array(
    'label' => 'above',
    'type' => 'commerce_price_formatted_amount',
    'weight' => 1,
    'settings' => array(
      'calculation' => FALSE,
    ),
  );
  field_update_instance($order_total);

  $billing = field_info_instance('commerce_order', 'commerce_customer_billing', 'commerce_order');
  $billing['display']['backoffice'] = array(
    'label' => 'above',
    'type' => 'commerce_customer_profile_reference_display',
    'weight' => 4,
    'settings' => array(),
  );
  field_update_instance($billing);

  $shipping = field_info_instance('commerce_order', 'commerce_customer_shipping', 'commerce_order');
  if ($shipping) {
    $shipping['display']['backoffice'] = array(
      'label' => 'above',
      'type' => 'commerce_customer_profile_reference_display',
      'weight' => 5,
      'settings' => array(),
    );
    field_update_instance($shipping);
  }

  // Update the extra fields (History view added by EVA, Status field provided
  // by this module).
  $bundle_settings = field_bundle_settings('commerce_order', 'commerce_order');
  $bundle_settings['extra_fields']['display']['commerce_backoffice_order_messages_order_view']['backoffice'] = array(
    'weight' => 2,
    'visible' => TRUE,
  );
  $bundle_settings['extra_fields']['display']['status']['backoffice'] = array(
    'weight' => 3,
    'visible' => TRUE,
  );
  field_bundle_settings('commerce_order', 'commerce_order', $bundle_settings);

  // Set the correct commerce order total formatter for the "backoffice"
  // view mode.
  $instance = field_info_instance('commerce_order', 'commerce_order_total', 'commerce_order');
  $instance['display']['backoffice']['type'] = 'commerce_price_formatted_components';
  field_update_instance($instance);
}
